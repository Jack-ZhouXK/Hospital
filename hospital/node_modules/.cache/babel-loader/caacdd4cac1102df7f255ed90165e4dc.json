{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ZXK/Desktop/hospital/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    //自定义验证密码的规则\n    var checkPhone = function checkPhone(rule, value, cb) {\n      //验证手机号的正则表达式\n      var regPhone = /^[1][3,4,5,7,8][0-9]{9}$/;\n\n      if (regPhone.test(value)) {\n        //合法的手机号\n        return cb();\n      }\n\n      cb(new Error('请输入合法的手机号'));\n    };\n\n    return {\n      //获取用户列表的请求参数对象\n      queryInfo: {\n        query: '',\n        //当前的页数\n        pageNum: 0,\n        //当前每页显示多少条数据\n        pageSize: 2\n      },\n      //请求接收服务器返回的数据\n      userList: [],\n      total: 0,\n      // 是否显示对话框\n      addDialogVisible: false,\n      //添加用户的表单数据\n      addForm: {\n        username: '',\n        phone: '',\n        roleName: ''\n      },\n      //添加表单验证规则对象\n      addFormRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 10 个字符',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, //自定义校验规则\n        {\n          validator: checkPhone,\n          trigger: 'blur'\n        }]\n      },\n      //修改用户对话框的显示与隐藏\n      editDialogStatus: false\n    };\n  },\n  created: function created() {\n    //获取用户数据\n    this.getUserList();\n  },\n  methods: {\n    //获取用户数据\n    getUserList: function getUserList() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$_this$$http$ge, res;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.$http.get('user/users', {\n                  params: _this.queryInfo\n                });\n\n              case 2:\n                _yield$_this$$http$ge = _context.sent;\n                res = _yield$_this$$http$ge.data;\n\n                if (!(res.status != 200)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this.$message.error('获取用户列表失败'));\n\n              case 6:\n                _this.userList = res.data.records;\n                _this.total = res.total;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    //监听pageSize改变的事件\n    handleSizeChange: function handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize;\n      this.getUserList();\n    },\n    //监听页码值改变的事件\n    handleCurrentChange: function handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage;\n      this.getUserList();\n    },\n    //监听用户状态的改变\n    userStateChange: function userStateChange(userInfo) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$_this2$$http$g, res;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$http.get(\"user/UpdateUserState\", {\n                  params: {\n                    id: userInfo.id,\n                    state: userInfo.mgState\n                  }\n                });\n\n              case 2:\n                _yield$_this2$$http$g = _context2.sent;\n                res = _yield$_this2$$http$g.data;\n\n                if (!(res.status != 200)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                userInfo.mgState = !userInfo.mgState;\n                return _context2.abrupt(\"return\", _this2.$message.error('更新用户状态失败'));\n\n              case 7:\n                return _context2.abrupt(\"return\", _this2.$message.success('修改成功'));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    //弹出添加用户对话框\n    addUsersButton: function addUsersButton() {\n      this.addDialogVisible = true;\n    },\n    //关闭菜单清空内容\n    addDialogClosed: function addDialogClosed() {\n      this.$refs.addFormRef.resetFields();\n    },\n    //添加用户\n    addUsers: function addUsers() {\n      var _this3 = this;\n\n      //预校验\n      this.$refs.addFormRef.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(valid) {\n          var _yield$_this3$$http$p, ref;\n\n          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (valid) {\n                    _context3.next = 2;\n                    break;\n                  }\n\n                  return _context3.abrupt(\"return\");\n\n                case 2:\n                  _context3.next = 4;\n                  return _this3.$http.post('user/addUser', _this3.addForm);\n\n                case 4:\n                  _yield$_this3$$http$p = _context3.sent;\n                  ref = _yield$_this3$$http$p.data;\n\n                  if (!(ref.status === 200)) {\n                    _context3.next = 10;\n                    break;\n                  }\n\n                  //隐藏对话框,刷新页面数据\n                  _this3.addDialogVisible = false;\n\n                  _this3.getUserList();\n\n                  return _context3.abrupt(\"return\", _this3.$message.success('添加成功!'));\n\n                case 10:\n                  return _context3.abrupt(\"return\", _this3.$message.error('添加失败!'));\n\n                case 11:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    //弹出修改用户对话框\n    changeEditStatus: function changeEditStatus(id) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$_this4$$http$g, res;\n\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this4.editDialogStatus = true; //查询数据\n\n                _context4.next = 3;\n                return _this4.$http.get(\"user/userById?id=\" + id);\n\n              case 3:\n                _yield$_this4$$http$g = _context4.sent;\n                res = _yield$_this4$$http$g.data;\n                _this4.addForm = res.data;\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    //修改用户\n    showEditDialog: function showEditDialog(params) {\n      var _this5 = this;\n\n      console.log(params);\n      this.$refs.addFormRef.validate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(valid) {\n          var _yield$_this5$$http$p, ref;\n\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  if (valid) {\n                    _context5.next = 2;\n                    break;\n                  }\n\n                  return _context5.abrupt(\"return\");\n\n                case 2:\n                  _context5.next = 4;\n                  return _this5.$http.post('user/editUser', params);\n\n                case 4:\n                  _yield$_this5$$http$p = _context5.sent;\n                  ref = _yield$_this5$$http$p.data;\n\n                  if (!(ref.status === 200)) {\n                    _context5.next = 10;\n                    break;\n                  }\n\n                  //隐藏对话框,刷新页面数据\n                  _this5.editDialogStatus = false;\n\n                  _this5.getUserList();\n\n                  return _context5.abrupt(\"return\", _this5.$message.success('修改成功!'));\n\n                case 10:\n                  return _context5.abrupt(\"return\", _this5.$message.error('修改失败!'));\n\n                case 11:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    },\n    //关闭修改对话框编辑事件\n    colseEditDailog: function colseEditDailog() {\n      this.$refs.addFormRef.resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["data","cb","queryInfo","query","pageNum","pageSize","userList","total","addDialogVisible","addForm","username","phone","roleName","addFormRules","required","message","trigger","min","max","validator","editDialogStatus","created","methods","getUserList","params","res","handleSizeChange","newSize","handleCurrentChange","newPage","userStateChange","userInfo","id","state","addUsersButton","addDialogClosed","addUsers","valid","ref","changeEditStatus","showEditDialog","console","colseEditDailog"],"sourceRoot":"src/components/user","sources":["users.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 面包屑导航区 -->\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>用户管理</el-breadcrumb-item>\n      <el-breadcrumb-item>用户列表</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <!-- 卡片视图区 -->\n    <el-card class=\"box-card\">\n      <!-- 搜索与添加区域 -->\n      <el-row :gutter=\"10\">\n        <el-col :span=\"7\">\n          <el-input placeholder=\"请输入内容\" v-model=\"queryInfo.query\" clearable @clear=\"getUserList()\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserList\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addUsersButton()\">添加用户</el-button>\n        </el-col>\n      </el-row>\n      <!-- 用户列表区域 -->\n      <el-table :data=\"userList\" style=\"width: 100%\" border stripe>\n        <!-- 想要添加索引列,直接type=index即可 -->\n        <el-table-column label=\"序号\" type=\"index\"> </el-table-column>\n        <el-table-column prop=\"username\" label=\"姓名\"> </el-table-column>\n        <el-table-column prop=\"roleName\" label=\"角色\"> </el-table-column>\n        <el-table-column prop=\"phone\" label=\"电话\"> </el-table-column>\n        <el-table-column label=\"状态\">\n          <template slot-scope=\"scope\">\n            <el-switch v-model=\"scope.row.mgState\" @change=\"userStateChange(scope.row)\">\n            </el-switch>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\">\n          <template slot-scope=\"scope\">\n            <!-- 修改按钮 enterable:鼠标是否可进入到tooltip中 -->\n            <el-tooltip effect=\"dark\" content=\"修改角色\" placement=\"top\" :enterable=\"false\" @click=\"editUser(scope.row.id)\">\n              <el-button type=\"primary\" icon=\"el-icon-edit\" @click=\"changeEditStatus(scope.row.id)\"></el-button>\n            </el-tooltip>\n            <!-- 删除按钮 -->\n            <el-tooltip effect=\"dark\" content=\"删除角色\" placement=\"top\" :enterable=\"false\">\n              <el-button type=\"danger\" icon=\"el-icon-delete\"></el-button>\n            </el-tooltip>\n            <!-- 分配角色按钮-->\n            <el-tooltip effect=\"dark\" content=\"分配角色\" placement=\"top\" :enterable=\"false\">\n              <el-button type=\"warning\" icon=\"el-icon-setting\"></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 分页区域 -->\n      <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pageNum\" :page-sizes=\"[1, 2, 5, 10]\" :page-size=\"queryInfo.pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\n      </el-pagination>\n\n      <!-- 添加用户的对话框 -->\n      <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\n        <!-- 内容主体区域 -->\n        <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\n          <el-form-item label=\"用户名\" prop=\"username\">\n            <el-input v-model=\"addForm.username\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"手机号\" prop=\"phone\">\n            <el-input v-model=\"addForm.phone\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"角色\">\n            <el-select v-model=\"addForm.roleName\" placeholder=\"请选择角色\">\n              <el-option label=\"用户\" value=\"用户\"></el-option>\n              <el-option label=\"管理员\" value=\"管理员\"></el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n        <!-- 底部区域 -->\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"addUsers\">确 定</el-button>\n        </span>\n      </el-dialog>\n\n      <!-- 修改用户对话框 -->\n      <el-dialog title=\"修改用户\" :visible.sync=\"editDialogStatus\" width=\"50%\" @close=\"colseEditDailog\">\n        <!-- 内容主体区域 -->\n        <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"70px\">\n          <el-form-item label=\"用户名\" prop=\"username\" :disabled=\"false\">\n            <el-input v-model=\"addForm.username\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"手机号\" prop=\"phone\">\n            <el-input v-model=\"addForm.phone\"></el-input>\n          </el-form-item>\n        </el-form>\n        <!-- 底部区域 -->\n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"editDialogStatus = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"showEditDialog(addForm)\">确 定</el-button>\n        </span>\n      </el-dialog>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    //自定义验证密码的规则\n    var checkPhone = (rule, value, cb) => {\n      //验证手机号的正则表达式\n      const regPhone = /^[1][3,4,5,7,8][0-9]{9}$/\n      if (regPhone.test(value)) {\n        //合法的手机号\n        return cb()\n      }\n      cb(new Error('请输入合法的手机号'))\n    }\n    return {\n      //获取用户列表的请求参数对象\n      queryInfo: {\n        query: '',\n        //当前的页数\n        pageNum: 0,\n        //当前每页显示多少条数据\n        pageSize: 2,\n      },\n      //请求接收服务器返回的数据\n      userList: [],\n      total: 0,\n      // 是否显示对话框\n      addDialogVisible: false,\n      //添加用户的表单数据\n      addForm: {\n        username: '',\n        phone: '',\n        roleName: '',\n      },\n      //添加表单验证规则对象\n      addFormRules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          {\n            min: 3,\n            max: 10,\n            message: '长度在 3 到 10 个字符',\n            trigger: 'blur',\n          },\n        ],\n        phone: [\n          { required: true, message: '请输入手机号', trigger: 'blur' },\n          //自定义校验规则\n          { validator: checkPhone, trigger: 'blur' },\n        ],\n      },\n      //修改用户对话框的显示与隐藏\n      editDialogStatus: false,\n    }\n  },\n  created() {\n    //获取用户数据\n    this.getUserList()\n  },\n  methods: {\n    //获取用户数据\n    async getUserList() {\n      const { data: res } = await this.$http.get('user/users', {\n        params: this.queryInfo,\n      })\n      if (res.status != 200) {\n        return this.$message.error('获取用户列表失败')\n      }\n      this.userList = res.data.records\n      this.total = res.total\n    },\n    //监听pageSize改变的事件\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize\n      this.getUserList()\n    },\n    //监听页码值改变的事件\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage\n      this.getUserList()\n    },\n    //监听用户状态的改变\n    async userStateChange(userInfo) {\n      const { data: res } = await this.$http.get(`user/UpdateUserState`, {\n        params: { id: userInfo.id, state: userInfo.mgState },\n      })\n      if (res.status != 200) {\n        userInfo.mgState = !userInfo.mgState\n        return this.$message.error('更新用户状态失败')\n      }\n      return this.$message.success('修改成功')\n    },\n    //弹出添加用户对话框\n    addUsersButton() {\n      this.addDialogVisible = true\n    },\n    //关闭菜单清空内容\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields()\n    },\n    //添加用户\n    addUsers() {\n      //预校验\n      this.$refs.addFormRef.validate(async (valid) => {\n        if (!valid) return\n        //发送添加用户请求\n        const { data: ref } = await this.$http.post(\n          'user/addUser',\n          this.addForm\n        )\n        if (ref.status === 200) {\n          //隐藏对话框,刷新页面数据\n          this.addDialogVisible = false\n          this.getUserList()\n          return this.$message.success('添加成功!')\n        }\n        return this.$message.error('添加失败!')\n      })\n    },\n    //弹出修改用户对话框\n    async changeEditStatus(id) {\n      this.editDialogStatus = true\n      //查询数据\n      const { data: res } = await this.$http.get(`user/userById?id=` + id)\n      this.addForm = res.data\n    },\n    //修改用户\n    showEditDialog(params) {\n      console.log(params);\n      this.$refs.addFormRef.validate(async (valid) => {\n        if (!valid) return\n        //发送修改用户请求\n        const { data: ref } = await this.$http.post('user/editUser', params)\n        if (ref.status === 200) {\n          //隐藏对话框,刷新页面数据\n          this.editDialogStatus = false\n          this.getUserList()\n          return this.$message.success('修改成功!')\n        }\n        return this.$message.error('修改失败!')\n      })\n    },\n    //关闭修改对话框编辑事件\n    colseEditDailog() {\n      this.$refs.addFormRef.resetFields()\n    }\n  },\n}\n</script>\n\n<style lang=\"less\" scoped>\n</style>"]},"metadata":{},"sourceType":"module"}